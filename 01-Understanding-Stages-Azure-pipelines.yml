# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: DevDeploy
  jobs:
    - job: DevDeployJob
      steps:
      - bash: echo Build Dev Job
      - bash: echo $(PipelineLevelVariable)
      - bash: echo $(Build.BuildNumber)
      - bash: echo $(Build.BuildId)
      - bash: echo $(Build.SourceBranchName)
      - bash: echo $(Build.SourceDirectory)
      - bash: echo $(System.DefaultWorkingDirectory)
      - bash: ls -R $(System.DefaultWorkingDirectory)
      - bash: echo $(System.DefaultStagingDirectory)
      - bash: ls -R $(System.DefaultStagingDirectory)
      - bash: echo 
      - bash: java -version
      - bash: node --version
      - bash: python --version
      - bash: mvn -version
      - bash: java -version
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: |
            **/.*yml
            **/*/tf
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - bash: ls -R $(System.DefaultStagingDirectory)
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'bishal'
          publishLocation: 'Container'
          
#- stage: QADeploy
#  dependsOn: DevDeploy 
#  jobs:
#    - job: QADeployJob
#      steps:
#      - bash: echo Build QA Job
#- stage: ProdDeploy
#  variables:
#    environment: Prod
#  dependsOn: 
#    - DevDeploy 
#    - QADeploy
#  jobs:
#    - job: ProdDeployJob
#      steps:
#      - bash: echo Build Prod Job
#      - bash: echo $(environment)DeployJob
